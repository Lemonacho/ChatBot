import telebot
import threading
import sqlite3
from datetime import datetime, timedelta
import logging
import time
from telebot import types
import random

TOKEN = '5856301284:AAFkyyN5_lp6N1bHSJxSczS3qsMOYDs8K2Y'
bot = telebot.TeleBot(TOKEN)

# 5856301284:AAFkyyN5_lp6N1bHSJxSczS3qsMOYDs8K2Y CONNOR
# 6637698496:AAGJrzuOV57E9Hpm-6e4CHh-3bkM2yteW6U TEST

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

ADM_ID = [985329138, 6855430781, 6814115227, 6858984069, 6489407861, 6805313098, 1070083225, 7056431933, 6480044498]
YOUR_CHAT_ID = -1002011863502
# -1002011863502 CONNOR
# -1001909691999 TEST

conn = sqlite3.connect('punishments.db')
cursor = conn.cursor()

cursor.execute('''
    CREATE TABLE IF NOT EXISTS punishments (
        user_id INTEGER PRIMARY KEY,
        punishment_number INTEGER,
        punishment_time INTEGER,
        block INTEGER DEFAULT 0,
        reason TEXT
    )
''')

cursor.execute('''
    CREATE TABLE IF NOT EXISTS bans (
        user_id INTEGER PRIMARY KEY,
        admin_id INTEGER,
        ban_timestamp INTEGER
    )
''')

cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        user_id INTEGER,
        username TEXT,
        first_name TEXT,
        last_name TEXT
    )
''')

conn.commit()

def update_users_db():
    try:
        cursor.execute("SELECT user_id FROM users")
        existing_user_ids = {row[0] for row in cursor.fetchall()}

        members = bot.get_chat_members(YOUR_CHAT_ID)

        for member in members:
            user_id = member.user.id
            if user_id not in existing_user_ids:
                username = member.user.username or ''
                first_name = member.user.first_name or ''
                last_name = member.user.last_name or ''
                cursor.execute("INSERT INTO users (user_id, username, first_name, last_name) VALUES (?, ?, ?, ?)",
                               (user_id, username, first_name, last_name))
                conn.commit()
                logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

    threading.Timer(1200, update_users_db).start()

update_users_db()



def send_welcome_message(chat_id, user):
    welcome_message = """
<i><b>‚ÄºÔ∏è –ü–†–ê–í–ò–õ–ê –ß–ê–¢–ê ‚ÄºÔ∏è</b></i>
<i><b>-–ù–µ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</b></i>
<i><b>-–ù–µ –ø–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–∞—Ç—å</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –¥–µ–∑–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–æ–µ–∫—Ç–µ </b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –ø—Ä–æ–¥–∞–∂–∞ –∫–∞–∫–∏—Ö –ª–∏–±–æ —É—Å–ª—É–≥/—Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∫—É—Ä–∞—Ç–æ—Ä–∞</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –≤ –ª—é–±–æ–º –≤–∏–¥–µ</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ —á–∞—Ç–µ</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –ß–ï–ö –ë–ò–û</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è 18+ –∫–æ–Ω—Ç–µ–Ω—Ç—É</b></i>

<i><b>‚öôÔ∏è–ö–æ–º–∞–Ω–¥—ã —á–∞—Ç–∞‚öôÔ∏è</b></i>
<code>/—Ç–ø</code> - <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Marvel Team‚öôÔ∏è</b>
<code>/–∫—É—Ä–∞—Ç–æ—Ä</code> - <b>–ù–∞—à –ª—é–±–∏–º—ã–π –∫—É—Ä–∞—Ç–æ—Ä üëë</b>
<code>/–ø–æ–º–æ—â–Ω–∏–∫–∏</code> - <b>–ü–æ–º–æ—â–Ω–∏–∫–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞üìñ</b>
<code>/–º–∞–Ω—É–∞–ª</code> - <b>–ù–∞—à –º–∞–Ω—É–∞–ª üìö</b>

<code>/–∑–∞–π–º—Ä—É</code> - <b>–°–ø–∏—Å–æ–∫ –∑–∞–π–º–æ–≤ –≤ –†–æ—Å—Å–∏–∏üá∑üá∫</b>
<code>/–∑–∞–π–º–∫–∑</code> - <b>–°–ø–∏—Å–æ–∫ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µüá∞üáø</b>
<code>/–∑–∞–π–º—É–∫—Ä</code> - <b>–°–ø–∏—Å–æ–∫ –∑–∞–π–º–æ–≤ –≤ –£–∫—Ä–∞–∏–Ω–µüá∫üá¶</b>
 <code>/help</code> - <b>–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —á–∞—Ç–∞üí≠</b>
    """.format(
        user_name=user.username,
        user_id=user.id,
        user_first_name=user.first_name,
    )

    msg = bot.send_message(
        chat_id,
        welcome_message,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(15, lambda: bot.delete_message(msg.chat.id, msg.message_id)).start()

@bot.message_handler(content_types=['new_chat_members'])
def handle_new_chat_members(message):
    chat_id = message.chat.id

    new_members = message.new_chat_members
    if new_members:
        for member in new_members:
            send_welcome_message(chat_id, member)

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–ø—Ä–∞–≤–∏–ª–∞', '–ü—Ä–∞–≤–∏–ª–∞'])
def handle_tp(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<i><b>‚ÄºÔ∏è –ü–†–ê–í–ò–õ–ê –ß–ê–¢–ê ‚ÄºÔ∏è</b></i>
<i><b>-–ù–µ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</b></i>
<i><b>-–ù–µ –ø–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–∞—Ç—å</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –¥–µ–∑–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–æ–µ–∫—Ç–µ </b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –ø—Ä–æ–¥–∞–∂–∞ –∫–∞–∫–∏—Ö –ª–∏–±–æ —É—Å–ª—É–≥/—Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∫—É—Ä–∞—Ç–æ—Ä–∞</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –≤ –ª—é–±–æ–º –≤–∏–¥–µ</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ —á–∞—Ç–µ</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –ß–ï–ö –ë–ò–û</b></i>
<i><b>-–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è 18+ –∫–æ–Ω—Ç–µ–Ω—Ç—É</b></i>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['pressF', 'pressf' , 'Pressf' , 'Pressf'])
def handle_tp(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<i><b>Press F –±—ã–≤—à–∏–º –ø–æ–º–æ—â–Ω–∏–∫–∞–º , –º—ã –≤–∞—Å –ª—é–±–∏–º‚ù§Ô∏è</b></i>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(10, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

import logging

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['ban' , 'Ban'])
def handle_ban(message):
    if message.from_user.id not in ADM_ID:
        return

    user_id = message.reply_to_message.from_user.id if message.reply_to_message and message.reply_to_message.from_user else None

    if user_id:
        
        add_ban(user_id, message.from_user.id, datetime.now().timestamp())
        
        bot.kick_chat_member(YOUR_CHAT_ID, user_id)
        
        bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")

        threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()
    else:
        bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.")

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['unban'])
def handle_unban(message):
    if message.from_user.id not in ADM_ID:
        return

    user_id = None
    
    if len(message.text.split()) > 1:
        user_id = int(message.text.split()[1])

    if user_id:
        bot.unban_chat_member(YOUR_CHAT_ID, user_id)
        msg = bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
        
        threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()
    else:
        bot.send_message(message.chat.id, "üìõ–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /unban.üìõ")

        threading.Timer(8, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

def add_ban(user_id, admin_id, ban_timestamp):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()

    try:
        cursor.execute('INSERT OR REPLACE INTO bans (user_id, admin_id, ban_timestamp) VALUES (?, ?, ?)', (user_id, admin_id, ban_timestamp))
        conn.commit()
    finally:
        conn.close()

def is_user_banned(user_id):
    cursor.execute('SELECT * FROM bans WHERE user_id = ?', (user_id,))
    row = cursor.fetchone()
    return row is not None

def get_user_id(message):
    return message.from_user.id if message.from_user else message.chat.id

def handle_auto_unpunish(user_id):
    punishment_data = get_punishment_data(user_id)

    if punishment_data and punishment_data.get("block") == 1:
        punishment_number = punishment_data.get("punishment_number")
        remove_punishment(user_id)
        user_info = bot.get_chat_member(YOUR_CHAT_ID, user_id).user
        mention = f"@{user_info.username}" if user_info.username else f"[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å](tg://user?id={user_id})"
        message_text = f"üóΩ –ù–∞–∫–∞–∑–∞–Ω–∏–µ —Å {mention} —Å–Ω—è—Ç–æ. UUID {punishment_number} üóΩ"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(YOUR_CHAT_ID, message_text)

def start_auto_unpunish_thread(user_id, punishment_time):
    timer = threading.Timer(punishment_time, handle_auto_unpunish, args=[user_id])
    timer.start()

def add_punishment(user_id, punishment_number, punishment_time, reason):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()
    
    try:
        cursor.execute('''
            INSERT OR REPLACE INTO punishments (user_id, punishment_number, punishment_time, block, reason)
            VALUES (?, ?, ?, ?, ?)
        ''', (user_id, punishment_number, punishment_time, 1, reason))
        conn.commit()
    finally:
        conn.close()

def remove_punishment(user_id):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()
    
    try:
        cursor.execute('UPDATE punishments SET block = 0 WHERE user_id = ?', (user_id,))
        conn.commit()
    finally:
        conn.close()

def is_user_punished(user_id):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()
    
    try:
        cursor.execute('SELECT * FROM punishments WHERE user_id = ?', (user_id,))
        row = cursor.fetchone()
        return row is not None
    finally:
        conn.close()

def remaining_punishment_time(user_id):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()
    
    try:
        cursor.execute('SELECT punishment_time FROM punishments WHERE user_id = ?', (user_id,))
        row = cursor.fetchone()
        if row:
            punishment_time = row[0]
            remaining_time = max(punishment_time - int(datetime.now().timestamp()), 0)
            return remaining_time
        return 0
    finally:
        conn.close()

def get_punishment_data(user_id):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()
    
    try:
        cursor.execute('SELECT * FROM punishments WHERE user_id = ?', (user_id,))
        row = cursor.fetchone()
        if row:
            return {
                "user_id": row[0],
                "punishment_number": row[1],
                "punishment_time": row[2],
                "block": row[3],
                "reason": row[4]
            }
        return None
    finally:
        conn.close()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['—Ç–ø', '–¢–ø' , '–¢–ü', 'tp' , 'TP'])
def handle_tp(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>üë§ –°–ø–∏—Å–æ–∫ –¢–ü –ø—Ä–æ–µ–∫—Ç–∞</b>

‚òÄÔ∏è<a href="https://t.me/ParanoikMarvel">–ü–∞—Ä–∞–Ω–æ–∏–∫</a>‚òÄÔ∏è
<b>‚åöÔ∏è–í—Ä–µ–º—è –†–∞–±–æ—Ç—ã: 12:00 - 00:00</b>

üåë<a href="https://t.me/DarknessMRVL">Darkness</a>üåë
<b>‚åöÔ∏è–í—Ä–µ–º—è –†–∞–±–æ—Ç—ã:00:00 - 12:00</b>

<b>‚ÄºÔ∏è–ü–∏—Å–∞—Ç—å –¢–æ–ª—å–∫–æ –í –†–∞–±–æ—á–µ–µ –í—Ä–µ–º—è‚ÄºÔ∏è</b>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–∫—É—Ä–∞—Ç–æ—Ä', '–ö—É—Ä–∞—Ç–æ—Ä'])
def handle_kyr(message):
    user_id = get_user_id(message)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
    msg = bot.send_message(
        message.chat.id,
        """
<b>‚ù§Ô∏è–í–∞—à –ª—é–±–∏–º—ã–π –ö—É—Ä–∞—Ç–æ—Ä - <a href="https://t.me/ConnorMarvel">CONNOR</a>üíé\n–û–±—Ä–∞—â–∞—Ç—å—Å—è –ï—Å–ª–∏ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç 15 –ú–∏–Ω—É—Ç</b>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–ø–æ–º–æ—â–Ω–∏–∫–∏', '–ü–æ–º–æ—â–Ω–∏–∫–∏'])
def handle_helps(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>üî∞–ü–æ–º–æ—â–Ω–∏–∫–∏:</b>

<b><a href="https://t.me/GefestMarvel">‚ö°Ô∏èTHOR‚ö°Ô∏è</a> - 8:00 - 22:00 –ú–°–ö‚åöÔ∏è - –ü–æ–º–æ—â–Ω–∏–∫ –ö—É—Ä–∞—Ç–æ—Ä–∞</b>

<b><a href="https://t.me/SamuraiMarvel">üèÆSamuraiüèÆ</a> - 10:00 - 22:00 –ú–°–ö‚åöÔ∏è - –ü–æ–º–æ—â–Ω–∏–∫ –ö—É—Ä–∞—Ç–æ—Ä–∞</b>

<b><a href="https://t.me/laivuMRVL">üí†Laivuüí†</a> - 07:00 - 14:00 –ú–°–ö‚åöÔ∏è | 22:00 - 00:00 –ú–°–ö‚åöÔ∏è - –ü–æ–º–æ—â–Ω–∏–∫ –ö—É—Ä–∞—Ç–æ—Ä–∞</b>

        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()


@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–º–∞–Ω—É–∞–ª', '–ú–∞–Ω—É–∞–ª'])
def handle_man(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>üéì–¢—ã –∑–∞—Ö–æ—Ç–µ–ª –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –í–æ–ø—Ä–æ—Å? –ú–æ–ª–æ–¥–µ—Üüéì</b>
<b><a href="https://t.me/+XvVxqKuaeucxY2Nk">üéâ–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –ú–∞–Ω—É–∞–ªüéâ</a></b>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['help', 'Help'])
def handle_man(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>‚öôÔ∏è–ö–æ–º–∞–Ω–¥—ã —á–∞—Ç–∞‚öôÔ∏è</b>
<code>/—Ç–ø</code><b> - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Marvel Team‚öôÔ∏è</b>
<code>/–∫—É—Ä–∞—Ç–æ—Ä</code><b> - –ù–∞—à –ª—é–±–∏–º—ã–π –∫—É—Ä–∞—Ç–æ—Ä üëë</b>
<code>/–ø–æ–º–æ—â–Ω–∏–∫–∏</code> - <b> - –ü–æ–º–æ—â–Ω–∏–∫–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞üìñ</b>
<code>/–º–∞–Ω—É–∞–ª</code><b> - –ù–∞—à –º–∞–Ω—É–∞–ª üìö</b>
<code>/–ø—Ä–∞–≤–∏–ª–∞</code><b> - –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞ üõ°</b>

<code>/–∑–∞–π–º—Ä—É</code><b> - –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –¥–ª—è –∑–∞–π–º–∞ –≤ –†–æ—Å—Å–∏–∏üá∑üá∫</b>
<code>/–∑–∞–π–º–∫–∑</code><b> - –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –¥–ª—è –∑–∞–π–º–∞ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µüá∞üáø</b>
<code>/–∑–∞–π–º—É–∫—Ä</code><b> - –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –¥–ª—è –∑–∞–π–º–∞ –≤ –£–∫—Ä–∞–∏–Ω–µüá∫üá¶</b>

<code>/help</code><b> - –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —á–∞—Ç–∞üí≠</b>

        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()

    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()


@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–∑–∞–π–º—Ä—É' , '–ó–∞–π–º—Ä—É' , '–∑–∞–π–º–†—É' , '–ó–∞–π–º–†—É'])
def handle_tp(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>üí∞–ó–∞–π–º—ã –≤ üá∑üá∫ üí∞</b>
<b><a href="https://ekapusta.com/">üíµ–ï-–ö–∞–ø—É—Å—Ç–∞üíµ</a></b>

<b><a href="https://web-zaim.ru/">üíµ–í–µ–±-–ó–∞–π–ºüíµ</a></b>

<b><a href="https://turbozaim.ru/">üíµ–¢—É—Ä–±–æ–ó–∞–π–ºüíµ</a></b>

<b><a href="https://moneyman.ru/">üíµMoneyManüíµ</a></b>

<b><a href="https://webbankir.com/">üíµ–í–µ–±-–ë–∞–Ω–∫–∏—Äüíµ</a></b>

<b><a href="https://migcredit.ru/">üíµ–ú–∏–≥–ö—Ä–µ–¥–∏—Çüíµ</a></b>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()
    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–∑–∞–π–º—É–∫—Ä' , '–ó–∞–π–º—É–∫—Ä' , '–∑–∞–π–º–£–∫—Ä' , '–ó–∞–π–º–£–∫—Ä'])
def handle_tp(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>üí∞–ó–∞–π–º—ã –≤ üá∫üá¶ üí∞</b>
<b><a href="https://e-groshi.com/">üíµE-Groshiüíµ</a></b>

<b><a href="https://creditkasa.com.ua/ru/">üíµCreditKasaüíµ</a></b>

<b><a href="https://sloncredit.ua/ru/">üíµSlonCreditüíµ</a></b>

<b><a href="https://creditplus.ua/">üíµCreditPlusüíµ</a></b>

<b><a href="https://kachay.com.ua/ru">üíµ–ö–∞—á–∞ –ì—Ä–æ—à–∏üíµ</a></b>

<b><a href="https://selfiecredit.com.ua/ru/">üíµSelfieCreditüíµ</a></b>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()
    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['–∑–∞–π–º–∫–∑' , '–ó–∞–π–º–∫–∑' , '–∑–∞–π–º–ö–∑' , '–ó–∞–π–º–ö–∑'])
def handle_tp(message):
    user_id = get_user_id(message)

    msg = bot.send_message(
        message.chat.id,
        """
<b>üí∞–ó–∞–π–º—ã –≤ üá∞üáø üí∞</b>
<b><a href="https://credit365.kz/">üíµCredit365üíµ</a></b>

<b><a href="https://turbomoney.kz/">üíµTurboMoneyüíµ</a></b>

<b><a href="https://evazaym.kz/">üíµEvaZaymüíµ</a></b>

<b><a href="https://timezaim.kz/">üíµTimeZaymüíµ</a></b>

<b><a href="https://dengiclick.kz/">üíµDengiClicküíµ</a></b>

<b><a href="https://gm24.kz/">üíµGoMoneyüíµ</a></b>
        """,
        parse_mode="HTML",
        disable_web_page_preview=True,
    )

    threading.Timer(1, lambda: bot.delete_message(message.chat.id, message.message_id)).start()
    threading.Timer(20, lambda: bot.delete_message(message.chat.id, msg.message_id)).start()

@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['mute'])
def handle_punish(message):
    if message.from_user.id not in ADM_ID:
        return

    user_id = message.reply_to_message.from_user.id if message.reply_to_message and message.reply_to_message.from_user else None

    if user_id:
        args = message.text.split()[1:]
        if len(args) >= 2:
            time_string = args[0]
            reason = ' '.join(args[1:])

            try:
                punishment_time = int(time_string[:-1])
                unit = time_string[-1]

                if unit == 'd':
                    punishment_time *= 24 * 60 * 60
                elif unit == 'h':
                    punishment_time *= 60 * 60
                elif unit == 'm':
                    punishment_time *= 60
                else:
                    raise ValueError()

                next_punishment_number = get_next_punishment_number()

                add_punishment(user_id, next_punishment_number, punishment_time, reason)

                bot.restrict_chat_member(YOUR_CHAT_ID, user_id,
                    until_date=datetime.now().timestamp() + punishment_time,
                    can_send_messages=False,
                    can_send_media_messages=False,
                    can_add_web_page_previews=False,
                    can_send_other_messages=False,
                    can_invite_users=False,
                    can_pin_messages=False,
                    can_change_info=False
                )

                user_info = bot.get_chat_member(YOUR_CHAT_ID, user_id).user
                mention = f"@{user_info.username}" if user_info.username else f"[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å](tg://user?id={user_id})"
                message_text = f"{mention}\nüõ°–ü–æ–ª—É—á–∏–ª –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ {time_string}\n\n–ü–æ –ø—Ä–∏—á–∏–Ω–µ: {reason} ‚ùó\n\nUUID –Ω–∞–∫–∞–∑–∞–Ω–∏—è: {next_punishment_number}üìõ"

                bot.send_message(message.chat.id, message_text)

                start_auto_unpunish_thread(user_id, punishment_time)
                
            except ValueError:
                bot.send_message(message.chat.id, "üìõ–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, '7d' –¥–ª—è 7 –¥–Ω–µ–π.üìõ")
        else:
            bot.send_message(message.chat.id, "üìõ–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –∏ –ø—Ä–∏—á–∏–Ω—É –Ω–∞–∫–∞–∑–∞–Ω–∏—è.üìõ")
    else:
        bot.send_message(message.chat.id, "üìõ–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ.üìõ")


def get_next_punishment_number():
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()

    try:
        cursor.execute('SELECT MAX(punishment_number) FROM punishments')
        max_punishment_number = cursor.fetchone()[0]
        return max_punishment_number + 1 if max_punishment_number else 1
    finally:
        conn.close()


@bot.message_handler(func=lambda message: message.chat.id == YOUR_CHAT_ID, commands=['unmute'])
def handle_unpunish(message):
    if message.from_user.id not in ADM_ID:
        return

    args = message.text.split()[1:]

    if len(args) == 1:
        try:
            punishment_number = int(args[0])
            punishment_data = get_punishment_by_number(punishment_number)

            if punishment_data:
                user_id = punishment_data["user_id"]
                remove_punishment(user_id)

                # –£–¥–∞–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                bot.restrict_chat_member(YOUR_CHAT_ID, user_id,
                    can_send_messages=True,
                    can_send_media_messages=True,
                    can_add_web_page_previews=True,
                    can_send_other_messages=True,
                    can_invite_users=True,
                    can_pin_messages=True,
                    can_change_info=True
                )

                user_info = bot.get_chat_member(YOUR_CHAT_ID, user_id).user
                mention = f"@{user_info.username}" if user_info.username else f"[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å](tg://user?id={user_id})"
                message_text = f"üóΩ{mention}\n UUID {punishment_number} —Å–Ω—è—Ç–æ. üóΩ"

                bot.send_message(message.chat.id, message_text)

            else:
                bot.send_message(message.chat.id, "üìõ–ù–∞–∫–∞–∑–∞–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.üìõ")
        except ValueError:
            bot.send_message(message.chat.id, "üìõ–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–∞–∫–∞–∑–∞–Ω–∏—è.üìõ")
    else:
        bot.send_message(message.chat.id, "üìõ–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /unmute <–Ω–æ–º–µ—Ä –Ω–∞–∫–∞–∑–∞–Ω–∏—è>.üìõ")

def get_punishment_by_number(punishment_number):
    conn = sqlite3.connect('punishments.db')
    cursor = conn.cursor()

    try:
        cursor.execute('SELECT * FROM punishments WHERE punishment_number = ?', (punishment_number,))
        row = cursor.fetchone()
        if row:
            return {
                "user_id": row[0],
                "punishment_number": row[1],
                "punishment_time": row[2],
                "block": row[3],
                "reason": row[4]
            }
        return None
    finally:
        conn.close()

while True:
    try:
        bot.polling(none_stop=True, timeout=120)
    except Exception as e:
        time.sleep(5)
        continue

